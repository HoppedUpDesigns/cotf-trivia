{"ast":null,"code":"import styled, { createGlobalStyle, css } from 'styled-components';\nimport { device } from './BreakPoints';\nimport fontsCss from './fonts.module.css';\nexport const GlobalStyles = createGlobalStyle`\n ${fontsCss} // this works as a normal styled css\n \n/* Box sizing rules */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-size: 100%;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  overflow-x: hidden;\n  min-height: 100vh;\n  text-rendering: optimizeSpeed;\n  font-family: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.fonts.anekMalayalam;\n}}, sans-serif;\n  font-size: 1rem;\n  color: ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.colors.themeText;\n}};\n  background: ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.colors.background;\n}};\n  line-height: 1;\n  overflow-x: hidden;\n  position: relative;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nul,\nfigure,\nblockquote,\ndl,\ncaption,\ndd {\n  padding: 0;\n  margin: 0;\n}\nbutton {\n  border: none;\n  background-color: transparent;\n  font-family: inherit;\n  padding: 0;\n  cursor: pointer;\n}\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\nul[role=\"list\"],\nol[role=\"list\"] {\n  list-style: none;\n}\nli {\n  list-style-type: none;\n}\n/* Set core root defaults */\nhtml:focus-within {\n  scroll-behavior: smooth;\n}\n/* A elements that don't have a class get default styles */\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n  max-width: 100%;\n  display: block;\n}\nstyled.h2:hover {\n  background-color: red;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  html:focus-within {\n    scroll-behavior: auto;\n  }\n\n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n`;\nexport const Container = styled.div`\n  width: 100%;\n  max-width: 1360px;\n  margin: 0 auto;\n  padding: 0 ${_ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.paddings.container;\n}};\n`;\nexport const Box = styled.div`\n  margin-top: calc(${_ref5 => {\n  let {\n    mt\n  } = _ref5;\n  return mt;\n}} * 1px);\n  ${_ref6 => {\n  let {\n    flxRight\n  } = _ref6;\n  return flxRight && css`\n      display: flex;\n      justify-content: flex-end;\n    `;\n}}\n`;\nexport const PageCenter = styled.div`\n  background: ${_ref7 => {\n  let {\n    light,\n    theme\n  } = _ref7;\n  return light ? `${theme.colors.background}` : `${theme.colors.themeGradient}`;\n}};\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  padding-top: 50px;\n  // due to flex direction column\n  ${_ref8 => {\n  let {\n    justifyCenter\n  } = _ref8;\n  return justifyCenter && css`\n      justify-content: center;\n    `;\n}}\n`;\nexport const Flex = styled.div`\n  display: flex;\n  ${_ref9 => {\n  let {\n    center\n  } = _ref9;\n  return center && css`\n      justify-content: center;\n      align-items: center;\n    `;\n}}\n  ${_ref10 => {\n  let {\n    spaceBetween\n  } = _ref10;\n  return spaceBetween && css`\n      justify-content: space-between;\n      align-items: center;\n    `;\n}}\n  ${_ref11 => {\n  let {\n    flxEnd\n  } = _ref11;\n  return flxEnd && css`\n      justify-content: flex-end;\n      align-items: center;\n    `;\n}}\n  ${_ref12 => {\n  let {\n    gap\n  } = _ref12;\n  return gap && css`\n      gap: ${gap};\n    `;\n}}\n`;\nexport const CenterCardContainer = styled.div`\n  background: ${_ref13 => {\n  let {\n    theme\n  } = _ref13;\n  return theme.colors.cardBackground;\n}};\n  border-radius: 4px;\n  min-width: 773px;\n  min-height: 620px;\n  padding: 50px 10px 60px 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  @media ${device.md} {\n    min-width: 100%;\n  }\n`;\nexport const HighlightedText = styled.span`\n  color: ${_ref14 => {\n  let {\n    themeText,\n    theme\n  } = _ref14;\n  return themeText ? theme.colors.themeText : theme.colors.themeColor;\n}};\n`;\nexport const LogoContainer = styled.div`\n  text-align: center;\n  margin-bottom: 50px;\n  @media ${device.md} {\n    margin-bottom: 30px;\n  }\n  svg {\n    width: 220px;\n    rect {\n      stroke: ${_ref15 => {\n  let {\n    theme\n  } = _ref15;\n  return theme.colors.appLogo;\n}};\n    }\n    path {\n      fill: ${_ref16 => {\n  let {\n    theme\n  } = _ref16;\n  return theme.colors.appLogo;\n}};\n    }\n  }\n`;\nexport const ResizableBox = styled.div`\n  width: ${props => typeof props.width === 'string' ? props.width : `${props.width}px`};\n`;","map":{"version":3,"names":["styled","createGlobalStyle","css","device","fontsCss","GlobalStyles","theme","fonts","anekMalayalam","colors","themeText","background","Container","div","paddings","container","Box","mt","flxRight","PageCenter","light","themeGradient","justifyCenter","Flex","center","spaceBetween","flxEnd","gap","CenterCardContainer","cardBackground","md","HighlightedText","span","themeColor","LogoContainer","appLogo","ResizableBox","props","width"],"sources":["/Users/jason/Sites/cotf-trivia/src/styles/Global.ts"],"sourcesContent":["import styled, { createGlobalStyle, css } from 'styled-components'\r\nimport { device } from './BreakPoints'\r\nimport fontsCss from './fonts.module.css'\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n ${fontsCss} // this works as a normal styled css\r\n \r\n/* Box sizing rules */\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml {\r\n  font-size: 100%;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n  overflow-x: hidden;\r\n  min-height: 100vh;\r\n  text-rendering: optimizeSpeed;\r\n  font-family: ${({ theme }) => theme.fonts.anekMalayalam}, sans-serif;\r\n  font-size: 1rem;\r\n  color: ${({ theme }) => theme.colors.themeText};\r\n  background: ${({ theme }) => theme.colors.background};\r\n  line-height: 1;\r\n  overflow-x: hidden;\r\n  position: relative;\r\n}\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6,\r\np,\r\nul,\r\nfigure,\r\nblockquote,\r\ndl,\r\ncaption,\r\ndd {\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\nbutton {\r\n  border: none;\r\n  background-color: transparent;\r\n  font-family: inherit;\r\n  padding: 0;\r\n  cursor: pointer;\r\n}\r\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\r\nul[role=\"list\"],\r\nol[role=\"list\"] {\r\n  list-style: none;\r\n}\r\nli {\r\n  list-style-type: none;\r\n}\r\n/* Set core root defaults */\r\nhtml:focus-within {\r\n  scroll-behavior: smooth;\r\n}\r\n/* A elements that don't have a class get default styles */\r\na:not([class]) {\r\n  text-decoration-skip-ink: auto;\r\n}\r\n\r\n/* Make images easier to work with */\r\nimg,\r\npicture {\r\n  max-width: 100%;\r\n  display: block;\r\n}\r\nstyled.h2:hover {\r\n  background-color: red;\r\n}\r\n\r\n/* Inherit fonts for inputs and buttons */\r\ninput,\r\nbutton,\r\ntextarea,\r\nselect {\r\n  font: inherit;\r\n}\r\n/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */\r\n@media (prefers-reduced-motion: reduce) {\r\n  html:focus-within {\r\n    scroll-behavior: auto;\r\n  }\r\n\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    animation-duration: 0.01ms !important;\r\n    animation-iteration-count: 1 !important;\r\n    transition-duration: 0.01ms !important;\r\n    scroll-behavior: auto !important;\r\n  }\r\n}\r\n`\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  max-width: 1360px;\r\n  margin: 0 auto;\r\n  padding: 0 ${({ theme }) => theme.paddings.container};\r\n`\r\n\r\ninterface BoxStyleTypes {\r\n  mt?: number\r\n  flxRight?: boolean\r\n}\r\n\r\nexport const Box = styled.div<BoxStyleTypes>`\r\n  margin-top: calc(${({ mt }) => mt} * 1px);\r\n  ${({ flxRight }) =>\r\n    flxRight &&\r\n    css`\r\n      display: flex;\r\n      justify-content: flex-end;\r\n    `}\r\n`\r\n\r\ninterface PageCenterTypes {\r\n  light?: boolean\r\n  justifyCenter?: boolean\r\n}\r\n\r\nexport const PageCenter = styled.div<PageCenterTypes>`\r\n  background: ${({ light, theme }) =>\r\n    light ? `${theme.colors.background}` : `${theme.colors.themeGradient}`};\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  padding-top: 50px;\r\n  // due to flex direction column\r\n  ${({ justifyCenter }) =>\r\n    justifyCenter &&\r\n    css`\r\n      justify-content: center;\r\n    `}\r\n`\r\n\r\ninterface FlexProps {\r\n  center?: boolean\r\n  spaceBetween?: boolean\r\n  flxEnd?: boolean\r\n  gap?: string\r\n  // Add any other necessary props\r\n}\r\n\r\nexport const Flex = styled.div<FlexProps>`\r\n  display: flex;\r\n  ${({ center }) =>\r\n    center &&\r\n    css`\r\n      justify-content: center;\r\n      align-items: center;\r\n    `}\r\n  ${({ spaceBetween }) =>\r\n    spaceBetween &&\r\n    css`\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    `}\r\n  ${({ flxEnd }) =>\r\n    flxEnd &&\r\n    css`\r\n      justify-content: flex-end;\r\n      align-items: center;\r\n    `}\r\n  ${({ gap }) =>\r\n    gap &&\r\n    css`\r\n      gap: ${gap};\r\n    `}\r\n`\r\n\r\nexport const CenterCardContainer = styled.div`\r\n  background: ${({ theme }) => theme.colors.cardBackground};\r\n  border-radius: 4px;\r\n  min-width: 773px;\r\n  min-height: 620px;\r\n  padding: 50px 10px 60px 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  @media ${device.md} {\r\n    min-width: 100%;\r\n  }\r\n`\r\n\r\nexport const HighlightedText = styled.span<{ themeText?: boolean }>`\r\n  color: ${({ themeText, theme }) =>\r\n    themeText ? theme.colors.themeText : theme.colors.themeColor};\r\n`\r\n\r\nexport const LogoContainer = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 50px;\r\n  @media ${device.md} {\r\n    margin-bottom: 30px;\r\n  }\r\n  svg {\r\n    width: 220px;\r\n    rect {\r\n      stroke: ${({ theme }) => theme.colors.appLogo};\r\n    }\r\n    path {\r\n      fill: ${({ theme }) => theme.colors.appLogo};\r\n    }\r\n  }\r\n`\r\n\r\ninterface ResizableBoxProps {\r\n  width: string | number\r\n}\r\n\r\nexport const ResizableBox = styled.div<ResizableBoxProps>`\r\n  width: ${(props) =>\r\n    typeof props.width === 'string' ? props.width : `${props.width}px`};\r\n`\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}