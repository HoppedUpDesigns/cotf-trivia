{"ast":null,"code":"var _jsxFileName = \"/Users/jason/Sites/reactjs-quiz-app/src/components/QuizDetailsScreen/index.tsx\",\n  _s = $RefreshSig$();\nimport styled from 'styled-components';\nimport { AppLogo, StartIcon } from '../../config/icons';\nimport { useQuiz } from '../../context/QuizContext';\nimport { useShuffleQuestions } from '../../hooks';\nimport { CenterCardContainer, HighlightedText, LogoContainer, PageCenter } from '../../styles/Global';\nimport { ScreenTypes } from '../../types';\nimport { convertSeconds } from '../../utils/helpers';\nimport Button from '../ui/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppTitle = styled.h2`\n  font-weight: 700;\n  font-size: 32px;\n  color: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.colors.themeColor;\n}};\n`;\n_c = AppTitle;\nconst DetailTextContainer = styled.div`\n  font-size: 20px;\n  font-weight: 500;\n  margin-top: 15px;\n  margin-bottom: 40px;\n  text-align: center;\n  max-width: 500px;\n`;\n_c2 = DetailTextContainer;\nconst DetailText = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n  margin-top: 15px;\n  line-height: 1.3;\n`;\n_c3 = DetailText;\nconst QuizDetailsScreen = () => {\n  _s();\n  const {\n    setCurrentScreen,\n    quizDetails\n  } = useQuiz();\n  const {\n    selectedQuizTopic,\n    totalQuestions,\n    totalScore,\n    totalTime\n  } = quizDetails;\n  const goToQuestionScreen = () => {\n    setCurrentScreen(ScreenTypes.QuestionScreen);\n  };\n\n  // to shuffle or randomize quiz questions\n  useShuffleQuestions();\n  return /*#__PURE__*/_jsxDEV(PageCenter, {\n    light: true,\n    justifyCenter: true,\n    children: /*#__PURE__*/_jsxDEV(CenterCardContainer, {\n      children: [/*#__PURE__*/_jsxDEV(LogoContainer, {\n        children: /*#__PURE__*/_jsxDEV(AppLogo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppTitle, {\n        children: \"COTF Trivia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DetailTextContainer, {\n        children: [/*#__PURE__*/_jsxDEV(DetailText, {\n          children: [\"Selected Quiz Topic: \", /*#__PURE__*/_jsxDEV(HighlightedText, {\n            children: selectedQuizTopic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DetailText, {\n          children: [\"Total questions to attempt:\", ' ', /*#__PURE__*/_jsxDEV(HighlightedText, {\n            children: totalQuestions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DetailText, {\n          children: [\"Score in total: \", /*#__PURE__*/_jsxDEV(HighlightedText, {\n            children: totalScore\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DetailText, {\n          children: [\"Total time: \", /*#__PURE__*/_jsxDEV(HighlightedText, {\n            children: convertSeconds(totalTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DetailText, {\n          children: \"To save time, you can skip questions. Skipped questions will show up at the end of the quiz.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Start\",\n        icon: /*#__PURE__*/_jsxDEV(StartIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this),\n        iconPosition: \"left\",\n        onClick: goToQuestionScreen,\n        bold: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizDetailsScreen, \"qxpLXMZZ5No6+B0crQgWtn4QObo=\", false, function () {\n  return [useQuiz, useShuffleQuestions];\n});\n_c4 = QuizDetailsScreen;\nexport default QuizDetailsScreen;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"AppTitle\");\n$RefreshReg$(_c2, \"DetailTextContainer\");\n$RefreshReg$(_c3, \"DetailText\");\n$RefreshReg$(_c4, \"QuizDetailsScreen\");","map":{"version":3,"names":["styled","AppLogo","StartIcon","useQuiz","useShuffleQuestions","CenterCardContainer","HighlightedText","LogoContainer","PageCenter","ScreenTypes","convertSeconds","Button","AppTitle","h2","theme","colors","themeColor","DetailTextContainer","div","DetailText","p","QuizDetailsScreen","setCurrentScreen","quizDetails","selectedQuizTopic","totalQuestions","totalScore","totalTime","goToQuestionScreen","QuestionScreen"],"sources":["/Users/jason/Sites/reactjs-quiz-app/src/components/QuizDetailsScreen/index.tsx"],"sourcesContent":["import styled from 'styled-components'\r\n\r\nimport { AppLogo, StartIcon } from '../../config/icons'\r\nimport { useQuiz } from '../../context/QuizContext'\r\nimport { useShuffleQuestions } from '../../hooks'\r\nimport {\r\n  CenterCardContainer,\r\n  HighlightedText,\r\n  LogoContainer,\r\n  PageCenter,\r\n} from '../../styles/Global'\r\nimport { ScreenTypes } from '../../types'\r\nimport { convertSeconds } from '../../utils/helpers'\r\n\r\nimport Button from '../ui/Button'\r\n\r\nconst AppTitle = styled.h2`\r\n  font-weight: 700;\r\n  font-size: 32px;\r\n  color: ${({ theme }) => theme.colors.themeColor};\r\n`\r\n\r\nconst DetailTextContainer = styled.div`\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  margin-top: 15px;\r\n  margin-bottom: 40px;\r\n  text-align: center;\r\n  max-width: 500px;\r\n`\r\n\r\nconst DetailText = styled.p`\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  margin-top: 15px;\r\n  line-height: 1.3;\r\n`\r\n\r\nconst QuizDetailsScreen = () => {\r\n  const { setCurrentScreen, quizDetails } = useQuiz()\r\n\r\n  const { selectedQuizTopic, totalQuestions, totalScore, totalTime } = quizDetails\r\n\r\n  const goToQuestionScreen = () => {\r\n    setCurrentScreen(ScreenTypes.QuestionScreen)\r\n  }\r\n\r\n  // to shuffle or randomize quiz questions\r\n  useShuffleQuestions()\r\n\r\n  return (\r\n    <PageCenter light justifyCenter>\r\n      <CenterCardContainer>\r\n        <LogoContainer>\r\n          <AppLogo />\r\n        </LogoContainer>\r\n        <AppTitle>COTF Trivia</AppTitle>\r\n        <DetailTextContainer>\r\n          <DetailText>\r\n            Selected Quiz Topic: <HighlightedText>{selectedQuizTopic}</HighlightedText>\r\n          </DetailText>\r\n          <DetailText>\r\n            Total questions to attempt:{' '}\r\n            <HighlightedText>{totalQuestions}</HighlightedText>\r\n          </DetailText>\r\n          <DetailText>\r\n            Score in total: <HighlightedText>{totalScore}</HighlightedText>\r\n          </DetailText>\r\n          <DetailText>\r\n            Total time: <HighlightedText>{convertSeconds(totalTime)}</HighlightedText>\r\n          </DetailText>\r\n          <DetailText>\r\n            To save time, you can skip questions. Skipped questions will show up at the\r\n            end of the quiz.\r\n          </DetailText>\r\n        </DetailTextContainer>\r\n        <Button\r\n          text=\"Start\"\r\n          icon={<StartIcon />}\r\n          iconPosition=\"left\"\r\n          onClick={goToQuestionScreen}\r\n          bold\r\n        />\r\n      </CenterCardContainer>\r\n    </PageCenter>\r\n  )\r\n}\r\n\r\nexport default QuizDetailsScreen\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}