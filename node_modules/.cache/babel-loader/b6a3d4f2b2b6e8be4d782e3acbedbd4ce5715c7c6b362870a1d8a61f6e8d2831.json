{"ast":null,"code":"var _jsxFileName = \"/Users/jason/Sites/cotf-trivia/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport Main from './components/Main';\nimport ToggleTheme from './components/ui/ToggleTheme';\nimport QuizProvider from './context/QuizContext';\nimport { GlobalStyles } from './styles/Global';\nimport { themes } from './styles/Theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentTheme, setCurrentTheme] = useState(() => {\n    const savedTheme = localStorage.getItem('theme');\n    return savedTheme || 'light';\n  });\n  const toggleTheme = e => {\n    const {\n      checked\n    } = e.target;\n    setCurrentTheme(checked ? 'dark' : 'light');\n    localStorage.setItem('theme', checked ? 'dark' : 'light');\n  };\n  const theme = currentTheme === 'light' ? themes.light : themes.dark;\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuizProvider, {\n      children: [/*#__PURE__*/_jsxDEV(ToggleTheme, {\n        onChange: toggleTheme,\n        currentTheme: currentTheme,\n        checked: currentTheme === 'dark',\n        id: \"toggleTheme\",\n        value: \"theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XOcrFPwVUbjl3aCh88oeSfk4kyk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ThemeProvider","Main","ToggleTheme","QuizProvider","GlobalStyles","themes","App","currentTheme","setCurrentTheme","savedTheme","localStorage","getItem","toggleTheme","e","checked","target","setItem","theme","light","dark"],"sources":["/Users/jason/Sites/cotf-trivia/src/App.tsx"],"sourcesContent":["import { useState } from 'react'\r\nimport { ThemeProvider } from 'styled-components'\r\n\r\nimport Main from './components/Main'\r\nimport ToggleTheme from './components/ui/ToggleTheme'\r\nimport QuizProvider from './context/QuizContext'\r\n\r\nimport { GlobalStyles } from './styles/Global'\r\nimport { themes } from './styles/Theme'\r\n\r\nfunction App() {\r\n  const [currentTheme, setCurrentTheme] = useState(() => {\r\n    const savedTheme = localStorage.getItem('theme')\r\n    return savedTheme || 'light'\r\n  })\r\n\r\n  const toggleTheme = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { checked } = e.target\r\n    setCurrentTheme(checked ? 'dark' : 'light')\r\n    localStorage.setItem('theme', checked ? 'dark' : 'light')\r\n  }\r\n\r\n  const theme = currentTheme === 'light' ? themes.light : themes.dark\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      <QuizProvider>\r\n        <ToggleTheme\r\n          onChange={toggleTheme}\r\n          currentTheme={currentTheme}\r\n          checked={currentTheme === 'dark'}\r\n          id=\"toggleTheme\"\r\n          value=\"theme\"\r\n        />\r\n        <Main />\r\n      </QuizProvider>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,mBAAmB;AAEjD,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,YAAY,MAAM,uBAAuB;AAEhD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,MAAM,QAAQ,gBAAgB;AAAA;AAEvC,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACrD,MAAMU,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,OAAOF,UAAU,IAAI,OAAO;EAC9B,CAAC,CAAC;EAEF,MAAMG,WAAW,GAAIC,CAAsC,IAAK;IAC9D,MAAM;MAAEC;IAAQ,CAAC,GAAGD,CAAC,CAACE,MAAM;IAC5BP,eAAe,CAACM,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;IAC3CJ,YAAY,CAACM,OAAO,CAAC,OAAO,EAAEF,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAC3D,CAAC;EAED,MAAMG,KAAK,GAAGV,YAAY,KAAK,OAAO,GAAGF,MAAM,CAACa,KAAK,GAAGb,MAAM,CAACc,IAAI;EAEnE,oBACE,QAAC,aAAa;IAAC,KAAK,EAAEF,KAAM;IAAA,wBAC1B,QAAC,YAAY;MAAA;MAAA;MAAA;IAAA,QAAG,eAChB,QAAC,YAAY;MAAA,wBACX,QAAC,WAAW;QACV,QAAQ,EAAEL,WAAY;QACtB,YAAY,EAAEL,YAAa;QAC3B,OAAO,EAAEA,YAAY,KAAK,MAAO;QACjC,EAAE,EAAC,aAAa;QAChB,KAAK,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QACb,eACF,QAAC,IAAI;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACK;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEpB;AAAC,GA7BQD,GAAG;AAAA,KAAHA,GAAG;AA+BZ,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}