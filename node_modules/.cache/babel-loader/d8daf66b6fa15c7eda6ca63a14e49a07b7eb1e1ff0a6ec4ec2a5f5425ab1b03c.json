{"ast":null,"code":"var _jsxFileName = \"/Users/jason/Sites/cotf-trivia/src/components/SplashScreen/index.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { AppLogo } from '../../config/icons';\nimport { PageCenter } from '../../styles/Global';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogoAnimation = styled.div`\n  svg {\n    width: ${_ref => {\n  let {\n    logoSize\n  } = _ref;\n  return logoSize;\n}};\n    transition: width 1s;\n  }\n`;\n_c = LogoAnimation;\nconst SplashScreen = () => {\n  _s();\n  const [logoSize, setLogoSize] = useState('80px');\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth < 900) {\n        setLogoSize('240px');\n      } else {\n        setLogoSize('350px');\n      }\n    };\n\n    // Set initial logo size\n    handleResize();\n\n    // Update logo size on window resize\n    window.addEventListener('resize', handleResize);\n\n    // Clean up event listener on component unmount\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PageCenter, {\n    justifyCenter: true,\n    children: /*#__PURE__*/_jsxDEV(LogoAnimation, {\n      logoSize: logoSize,\n      children: /*#__PURE__*/_jsxDEV(AppLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(SplashScreen, \"BH6fd9cB/IMXdJzejWwqLZTs5nM=\");\n_c2 = SplashScreen;\nexport default SplashScreen;\nvar _c, _c2;\n$RefreshReg$(_c, \"LogoAnimation\");\n$RefreshReg$(_c2, \"SplashScreen\");","map":{"version":3,"names":["useEffect","useState","styled","AppLogo","PageCenter","LogoAnimation","div","logoSize","SplashScreen","setLogoSize","handleResize","window","innerWidth","addEventListener","removeEventListener"],"sources":["/Users/jason/Sites/cotf-trivia/src/components/SplashScreen/index.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { AppLogo } from '../../config/icons'\r\nimport { PageCenter } from '../../styles/Global'\r\n\r\ninterface LogoAnimationProps {\r\n  logoSize: string\r\n}\r\n\r\nconst LogoAnimation = styled.div<LogoAnimationProps>`\r\n  svg {\r\n    width: ${({ logoSize }) => logoSize};\r\n    transition: width 1s;\r\n  }\r\n`\r\n\r\nconst SplashScreen = () => {\r\n  const [logoSize, setLogoSize] = useState('80px')\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (window.innerWidth < 900) {\r\n        setLogoSize('240px')\r\n      } else {\r\n        setLogoSize('350px')\r\n      }\r\n    }\r\n\r\n    // Set initial logo size\r\n    handleResize()\r\n\r\n    // Update logo size on window resize\r\n    window.addEventListener('resize', handleResize)\r\n\r\n    // Clean up event listener on component unmount\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <PageCenter justifyCenter>\r\n      <LogoAnimation logoSize={logoSize}>\r\n        <AppLogo />\r\n      </LogoAnimation>\r\n    </PageCenter>\r\n  )\r\n}\r\n\r\nexport default SplashScreen\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,UAAU,QAAQ,qBAAqB;AAAA;AAMhD,MAAMC,aAAa,GAAGH,MAAM,CAACI,GAAwB;AACrD;AACA,aAAa;EAAA,IAAC;IAAEC;EAAS,CAAC;EAAA,OAAKA,QAAQ;AAAA,CAAC;AACxC;AACA;AACA,CAAC;AAAA,KALKF,aAAa;AAOnB,MAAMG,YAAY,GAAG,MAAM;EAAA;EACzB,MAAM,CAACD,QAAQ,EAAEE,WAAW,CAAC,GAAGR,QAAQ,CAAC,MAAM,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMU,YAAY,GAAG,MAAM;MACzB,IAAIC,MAAM,CAACC,UAAU,GAAG,GAAG,EAAE;QAC3BH,WAAW,CAAC,OAAO,CAAC;MACtB,CAAC,MAAM;QACLA,WAAW,CAAC,OAAO,CAAC;MACtB;IACF,CAAC;;IAED;IACAC,YAAY,EAAE;;IAEd;IACAC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;;IAE/C;IACA,OAAO,MAAM;MACXC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,UAAU;IAAC,aAAa;IAAA,uBACvB,QAAC,aAAa;MAAC,QAAQ,EAAEH,QAAS;MAAA,uBAChC,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACL;AAEjB,CAAC;AAAA,GA/BKC,YAAY;AAAA,MAAZA,YAAY;AAiClB,eAAeA,YAAY;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}