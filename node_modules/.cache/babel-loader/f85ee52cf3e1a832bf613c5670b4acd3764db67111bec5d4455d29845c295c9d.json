{"ast":null,"code":"var _jsxFileName = \"/Users/jason/Sites/cotf-trivia/src/components/QuestionScreen/Answer/index.tsx\";\nimport styled, { css } from 'styled-components';\nimport { device } from '../../../styles/BreakPoints';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnswerStyle = styled.div`\n  font-size: clamp(18px, 4vw, 16px);\n  color: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.colors.secondaryText;\n}};\n  font-weight: 400;\n  border: 1px solid\n    ${_ref2 => {\n  let {\n    highlightAnswer,\n    theme\n  } = _ref2;\n  return highlightAnswer ? `${theme.colors.themeColor}` : `${theme.colors.border}`;\n}};\n  background-color: ${_ref3 => {\n  let {\n    highlightAnswer,\n    theme\n  } = _ref3;\n  return highlightAnswer ? `${theme.colors.selectedAnswer}` : `${theme.colors.answerBg}`;\n}};\n  border-radius: 16px;\n  margin-top: clamp(13px, calc(10px + 6 * ((100vw - 600px) / 1320)), 16px);\n  cursor: pointer;\n  ${_ref4 => {\n  let {\n    highlightAnswer\n  } = _ref4;\n  return highlightAnswer && css`\n      transition: border 0.2s ease-in;\n    `;\n}}\n  @media ${device.md} {\n    font-weight: 500;\n  }\n  input {\n    visibility: hidden;\n    margin: 0;\n  }\n`;\n_c = AnswerStyle;\nconst AnswerLabel = styled.label`\n  padding: 18px;\n  display: flex;\n  cursor: pointer;\n  @media ${device.md} {\n    padding: 14px;\n  }\n`;\n_c2 = AnswerLabel;\nconst ChoiceLabel = styled.span``;\n_c3 = ChoiceLabel;\nconst Answer = _ref5 => {\n  let {\n    onChange,\n    index,\n    choice,\n    type,\n    selectedAnswer\n  } = _ref5;\n  // Convert index to alphabet character to show ABCD before question\n  const label = String.fromCharCode(65 + index);\n  return /*#__PURE__*/_jsxDEV(AnswerStyle, {\n    highlightAnswer: selectedAnswer.includes(choice),\n    children: /*#__PURE__*/_jsxDEV(AnswerLabel, {\n      children: [/*#__PURE__*/_jsxDEV(ChoiceLabel, {\n        children: [label, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: choice\n        // radio is for checked one option and checkbox is for checked multiple options\n        ,\n        type: type === 'MAQs' ? 'checkbox' : 'radio',\n        checked: selectedAnswer.includes(choice),\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), choice]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c4 = Answer;\nexport default Answer;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"AnswerStyle\");\n$RefreshReg$(_c2, \"AnswerLabel\");\n$RefreshReg$(_c3, \"ChoiceLabel\");\n$RefreshReg$(_c4, \"Answer\");","map":{"version":3,"names":["styled","css","device","AnswerStyle","div","theme","colors","secondaryText","highlightAnswer","themeColor","border","selectedAnswer","answerBg","md","AnswerLabel","label","ChoiceLabel","span","Answer","onChange","index","choice","type","String","fromCharCode","includes"],"sources":["/Users/jason/Sites/cotf-trivia/src/components/QuestionScreen/Answer/index.tsx"],"sourcesContent":["import { FC } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { device } from '../../../styles/BreakPoints'\r\n\r\nconst AnswerStyle = styled.div<{ highlightAnswer: boolean }>`\r\n  font-size: clamp(18px, 4vw, 16px);\r\n  color: ${({ theme }) => theme.colors.secondaryText};\r\n  font-weight: 400;\r\n  border: 1px solid\r\n    ${({ highlightAnswer, theme }) =>\r\n      highlightAnswer ? `${theme.colors.themeColor}` : `${theme.colors.border}`};\r\n  background-color: ${({ highlightAnswer, theme }) =>\r\n    highlightAnswer ? `${theme.colors.selectedAnswer}` : `${theme.colors.answerBg}`};\r\n  border-radius: 16px;\r\n  margin-top: clamp(13px, calc(10px + 6 * ((100vw - 600px) / 1320)), 16px);\r\n  cursor: pointer;\r\n  ${({ highlightAnswer }) =>\r\n    highlightAnswer &&\r\n    css`\r\n      transition: border 0.2s ease-in;\r\n    `}\r\n  @media ${device.md} {\r\n    font-weight: 500;\r\n  }\r\n  input {\r\n    visibility: hidden;\r\n    margin: 0;\r\n  }\r\n`\r\n\r\nconst AnswerLabel = styled.label`\r\n  padding: 18px;\r\n  display: flex;\r\n  cursor: pointer;\r\n  @media ${device.md} {\r\n    padding: 14px;\r\n  }\r\n`\r\n\r\nconst ChoiceLabel = styled.span``\r\n\r\ninterface AnswerProps {\r\n  index: number\r\n  choice: string\r\n  type: string\r\n  selectedAnswer: string[]\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst Answer: FC<AnswerProps> = ({ onChange, index, choice, type, selectedAnswer }) => {\r\n  // Convert index to alphabet character to show ABCD before question\r\n  const label = String.fromCharCode(65 + index)\r\n\r\n  return (\r\n    <AnswerStyle key={index} highlightAnswer={selectedAnswer.includes(choice)}>\r\n      <AnswerLabel>\r\n        <ChoiceLabel>{label}.</ChoiceLabel>\r\n        <input\r\n          name={choice}\r\n          // radio is for checked one option and checkbox is for checked multiple options\r\n          type={type === 'MAQs' ? 'checkbox' : 'radio'}\r\n          checked={selectedAnswer.includes(choice)}\r\n          onChange={onChange}\r\n        />\r\n        {choice}\r\n      </AnswerLabel>\r\n    </AnswerStyle>\r\n  )\r\n}\r\n\r\nexport default Answer\r\n"],"mappings":";AACA,OAAOA,MAAM,IAAIC,GAAG,QAAQ,mBAAmB;AAC/C,SAASC,MAAM,QAAQ,6BAA6B;AAAA;AAEpD,MAAMC,WAAW,GAAGH,MAAM,CAACI,GAAkC;AAC7D;AACA,WAAW;EAAA,IAAC;IAAEC;EAAM,CAAC;EAAA,OAAKA,KAAK,CAACC,MAAM,CAACC,aAAa;AAAA,CAAC;AACrD;AACA;AACA,MAAM;EAAA,IAAC;IAAEC,eAAe;IAAEH;EAAM,CAAC;EAAA,OAC3BG,eAAe,GAAI,GAAEH,KAAK,CAACC,MAAM,CAACG,UAAW,EAAC,GAAI,GAAEJ,KAAK,CAACC,MAAM,CAACI,MAAO,EAAC;AAAA,CAAC;AAChF,sBAAsB;EAAA,IAAC;IAAEF,eAAe;IAAEH;EAAM,CAAC;EAAA,OAC7CG,eAAe,GAAI,GAAEH,KAAK,CAACC,MAAM,CAACK,cAAe,EAAC,GAAI,GAAEN,KAAK,CAACC,MAAM,CAACM,QAAS,EAAC;AAAA,CAAC;AACpF;AACA;AACA;AACA,IAAI;EAAA,IAAC;IAAEJ;EAAgB,CAAC;EAAA,OACpBA,eAAe,IACfP,GAAI;AACR;AACA,KAAK;AAAA,CAAC;AACN,WAAWC,MAAM,CAACW,EAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA,KAxBKV,WAAW;AA0BjB,MAAMW,WAAW,GAAGd,MAAM,CAACe,KAAM;AACjC;AACA;AACA;AACA,WAAWb,MAAM,CAACW,EAAG;AACrB;AACA;AACA,CAAC;AAAA,MAPKC,WAAW;AASjB,MAAME,WAAW,GAAGhB,MAAM,CAACiB,IAAK,EAAC;AAAA,MAA3BD,WAAW;AAUjB,MAAME,MAAuB,GAAG,SAAuD;EAAA,IAAtD;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,MAAM;IAAEC,IAAI;IAAEX;EAAe,CAAC;EAChF;EACA,MAAMI,KAAK,GAAGQ,MAAM,CAACC,YAAY,CAAC,EAAE,GAAGJ,KAAK,CAAC;EAE7C,oBACE,QAAC,WAAW;IAAa,eAAe,EAAET,cAAc,CAACc,QAAQ,CAACJ,MAAM,CAAE;IAAA,uBACxE,QAAC,WAAW;MAAA,wBACV,QAAC,WAAW;QAAA,WAAEN,KAAK,EAAC,GAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eACnC;QACE,IAAI,EAAEM;QACN;QAAA;QACA,IAAI,EAAEC,IAAI,KAAK,MAAM,GAAG,UAAU,GAAG,OAAQ;QAC7C,OAAO,EAAEX,cAAc,CAACc,QAAQ,CAACJ,MAAM,CAAE;QACzC,QAAQ,EAAEF;MAAS;QAAA;QAAA;QAAA;MAAA,QACnB,EACDE,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA;EACK,GAXED,KAAK;IAAA;IAAA;IAAA;EAAA,QAYT;AAElB,CAAC;AAAA,MAnBKF,MAAuB;AAqB7B,eAAeA,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}